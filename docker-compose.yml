version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: ${RABBITMQ_DEFAULT_DOMAIN}
    ports:
      - "5672:5672"       # Puerto para mensajes
      - "15672:15672"     # Interfaz web de administraci√≥n
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./apps/api-gateway/src:/usr/src/app/src
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: npm run start:dev
    environment:
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - RABBITMQ_DEFAULT_DOMAIN=${RABBITMQ_DEFAULT_DOMAIN}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_PORT=${RABBITMQ_DEFAULT_PORT}
    networks:
      - microservices-network

  factors-service:
    build:
      context: .
      dockerfile: ./apps/factors-service/Dockerfile
    volumes:
      - ./apps/factors-service/src:/usr/src/app/src
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: npm run start:dev
    environment:
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - RABBITMQ_DEFAULT_DOMAIN=${RABBITMQ_DEFAULT_DOMAIN}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_PORT=${RABBITMQ_DEFAULT_PORT}
    networks:
      - microservices-network

  factorial-app:
    build:
      context: .
      dockerfile: ./apps/factorial-app/Dockerfile
    volumes:
      - ./apps/factorial-app/src:/usr/src/app/src
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: npm run start:dev
    environment:
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - RABBITMQ_DEFAULT_DOMAIN=${RABBITMQ_DEFAULT_DOMAIN}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_PORT=${RABBITMQ_DEFAULT_PORT}
    networks:
      - microservices-network

  primality-service:
    build:
      context: .
      dockerfile: ./apps/primality-service/Dockerfile
    volumes:
      - ./apps/primality-service/src:/usr/src/app/src
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: npm run start:dev
    environment:
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - RABBITMQ_DEFAULT_DOMAIN=${RABBITMQ_DEFAULT_DOMAIN}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_PORT=${RABBITMQ_DEFAULT_PORT}
    networks:
      - microservices-network

  parity-service:
    build:
      context: .
      dockerfile: ./apps/parity-service/Dockerfile
    volumes:
      - ./apps/parity-service/src:/usr/src/app/src
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: npm run start:dev
    environment:
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - RABBITMQ_DEFAULT_DOMAIN=${RABBITMQ_DEFAULT_DOMAIN}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_PORT=${RABBITMQ_DEFAULT_PORT}
    networks:
      - microservices-network

  sum-service:
    build:
      context: .
      dockerfile: ./apps/sum-service/Dockerfile
    volumes:
      - ./apps/sum-service/src:/usr/src/app/src
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: npm run start:dev
    environment:
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - RABBITMQ_DEFAULT_DOMAIN=${RABBITMQ_DEFAULT_DOMAIN}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_PORT=${RABBITMQ_DEFAULT_PORT}
    networks:
      - microservices-network

  fibonacci-service:
    build:
      context: .
      dockerfile: ./apps/fibonacci-service/Dockerfile
    volumes:
      - ./apps/fibonacci-service/src:/usr/src/app/src
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: npm run start:dev
    environment:
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - RABBITMQ_DEFAULT_DOMAIN=${RABBITMQ_DEFAULT_DOMAIN}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_PORT=${RABBITMQ_DEFAULT_PORT}
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge
